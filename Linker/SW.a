;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include "switch.h"
;#include "LED.h"
;// Declare your global variables here
;struct Buttons{
;char SW1;
;char SW2;
;} ;
;Buttons Button;
; 0000 0009 Buttons Button;

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000A 
; 0000 000B 
; 0000 000C // External Interrupt 0 service routine
; 0000 000D interrupt [EXT_INT0] void ext_int0_isr(void)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 000E {
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 000F // Place your code here
; 0000 0010 Button.SW1 = TRUE;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0011 }
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;// External Interrupt 1 service routine
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 0014 {
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0015 // Place your code here
; 0000 0016 Button.SW2 = TRUE;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0017 }
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;
;
;
;char SW1(void)
; 0000 001C {
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 001D char ret;
; 0000 001E ret = Button.SW1;
;PCODE: $00000021 VOL: 0
;	ret -> R17
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 001F Button.SW1 = FALSE;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0020 return ret;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0021 }
;PCODE: $00000029 VOL: 0
;char SW2(void)
; 0000 0023 {
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0024 char ret;
; 0000 0025 ret = Button.SW2;
;PCODE: $0000002C VOL: 0
;	ret -> R17
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0026 Button.SW2 = FALSE;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0027 return ret;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0028 }
;PCODE: $00000034 VOL: 0
;
;void InitializeSwitch(void)
; 0000 002B {
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 002C // ½ºÀ§Ä¡ PORTD 0,1
; 0000 002D PORTD &= 0xfc;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 002E DDRD &= 0xfc;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 002F // External Interrupt(s) initialization
; 0000 0030 // INT0: On
; 0000 0031 // INT0 Mode: Falling Edge
; 0000 0032 // INT1: On
; 0000 0033 // INT1 Mode: Falling Edge
; 0000 0034 // INT2: Off
; 0000 0035 // INT3: Off
; 0000 0036 // INT4: Off
; 0000 0037 // INT5: Off
; 0000 0038 // INT6: Off
; 0000 0039 // INT7: Off
; 0000 003A EICRA=0x0A;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 003B EICRB=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 003C EIMSK=0x03;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 003D EIFR=0x03;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 003E }
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;
;void main(void)
; 0000 0041 {
;PCODE: $00000047 VOL: 0
; 0000 0042 // Declare your local variables here
; 0000 0043 InitializeSwitch();
;PCODE: $00000048 VOL: 0
; 0000 0044 InitializeLED();
; 0000 0045 Button.SW1 = FALSE;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0046 Button.SW2 = FALSE;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0047 // Global enable interrupts
; 0000 0048 #asm("sei")
;PCODE: $0000004E VOL: 0
	sei
;PCODE: $0000004F VOL: 0
; 0000 0049 while (1)
;PCODE: $00000050 VOL: 0
; 0000 004A {
; 0000 004B // Place your code here
; 0000 004C if(SW1() == TRUE)
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 004D {
; 0000 004E LED_ON(LED1);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 004F LED_ON(LED2);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0050 LED_OFF(LED3);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0051 LED_OFF(LED4);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0052 }
; 0000 0053 if(SW2() == TRUE)
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0054 {
; 0000 0055 LED_OFF(LED1);
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0056 LED_OFF(LED2);
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0057 LED_ON(LED3);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0058 LED_ON(LED4);
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0059 }
; 0000 005A };
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 005B }
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;
;
